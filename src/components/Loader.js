import { useRef } from 'react';

import './Loader.css';

const PUZZLE_ARRAYS = [
	{
		name: 'Empty',
		grid: [
			0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,
		],
	},
	{
		name: 'Diagonal',
		grid: [
			0,2,3,4,5,6,7,8,9,
			2,0,4,5,6,7,8,9,1,
			3,4,0,6,7,8,9,1,2,
			4,5,6,0,8,9,1,2,3,
			5,6,7,8,0,1,2,3,4,
			6,7,8,9,1,0,3,4,5,
			7,8,9,1,2,3,0,5,6,
			8,9,1,2,3,4,5,0,7,
			9,1,2,3,4,5,6,7,0,
		],
	},
	{
		name: 'Full',
		grid: [
			1,2,3,4,5,6,7,8,9,
			2,3,4,5,6,7,8,9,1,
			3,4,5,6,7,8,9,1,2,
			4,5,6,7,8,9,1,2,3,
			5,6,7,8,9,1,2,3,4,
			6,7,8,9,1,2,3,4,5,
			7,8,9,1,2,3,4,5,6,
			8,9,1,2,3,4,5,6,7,
			9,1,2,3,4,5,6,7,8,
		],
	},
	{
		name: 'Easy 1',
		grid: [
			8,0,0,2,1,0,0,0,5,
			0,0,1,0,0,9,0,0,0,
			0,0,2,0,7,0,3,8,0,
			0,1,0,0,0,0,0,0,4,
			3,0,8,0,0,0,2,0,6,
			9,0,0,0,0,0,0,5,0,
			0,3,7,0,5,0,1,0,0,
			1,0,0,0,6,8,0,0,2,
			0,0,0,1,0,0,0,0,0,
		],
	},
	{
		name: 'Medium 1',
		grid: [
			0,2,1,0,0,0,0,8,0,		// 7,2,1,5,3,4,6,8,9,
			3,0,8,0,6,0,0,0,2,		// 3,5,8,7,6,9,1,4,2,
			9,6,0,0,2,0,0,0,0,		// 9,6,4,1,2,8,5,3,7,
			0,0,0,3,0,0,0,0,0,		// 1,7,9,3,4,5,2,6,8,
			0,4,5,0,0,0,7,1,0,		// 6,4,5,8,9,2,7,1,3,
			0,0,0,0,0,7,0,0,0,		// 2,8,3,6,1,7,9,5,4,
			0,0,0,0,5,0,0,7,1,		// 4,3,2,9,5,6,8,7,1,
			5,0,0,0,8,0,4,0,6,		// 5,1,7,2,8,3,4,9,6,
			0,9,0,0,0,0,3,2,0,		// 8,9,6,4,7,1,3,2,5,
		],
	},
	{
		name: 'Hard 1',
		grid: [
			7,0,9,0,8,0,1,0,4,		// 7,2,9,3,8,6,1,5,4,
			0,0,0,0,2,0,0,0,0,		// 5,3,1,7,2,4,9,8,6,
			8,0,0,0,0,0,0,0,7,		// 8,6,4,1,5,9,3,2,7,
			0,0,5,8,0,7,2,0,0,		// 6,9,5,8,3,7,2,4,1,
			0,0,0,0,9,0,0,0,0,		// 1,4,7,6,9,2,8,3,5,
			0,0,3,5,0,1,6,0,0,		// 2,8,3,5,4,1,6,7,9,
			4,0,0,0,0,0,0,0,2,		// 4,1,8,9,7,3,5,6,2,
			0,0,0,0,6,0,0,0,0,		// 9,5,2,4,6,8,7,1,3,
			3,0,6,0,1,0,4,0,8,		// 3,7,6,2,1,5,4,9,8,
		],
	},
];

const Loader = ({onLoad}) => {
	const selectRef = useRef(null);

	const handleButtonClick = evt => {
		if (selectRef.current && selectRef.current.selectedOptions && selectRef.current.selectedOptions.length > 0) {
			const val = selectRef.current.selectedOptions[0];
			onLoad(PUZZLE_ARRAYS[val.value])
		}
	};

	return (
		<div className='Loader'>
			<select ref={selectRef}>
				{ PUZZLE_ARRAYS.map((obj, i) =>
					(<option key={i} value={i}>{obj.name}</option>))
				}
			</select>
			<button onClick={handleButtonClick}>Load</button>
		</div>
	);
};

export default Loader;
